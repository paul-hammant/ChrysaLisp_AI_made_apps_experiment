(include "lib/asm/func.inc")
(include "sys/str/class.inc")
(include "././str/class.inc")
(include "././stream/class.inc")
(include "././sstream/class.inc")
(include "./class.inc")
(include "lib/consts/chars.inc")

(gen-create 'error)
(gen-vtable 'error)

(def-method 'error :init)
	;inputs
	;:r0 = error object (ptr)
	;:r1 = vtable (pptr)
	;:r2 = description c string (pubyte)
	;:r3 = 0, else error msg index (uint)
	;:r4 = error payload object (ptr)
	;:r5 = filename string (ptr)
	;:r6 = line number (uint)
	;:r7 = stack frame (ptr)
	;outputs
	;:r0 = error object (ptr)
	;:r1 = 0 if error, else ok
	;trashes
	;:r1-:r6

	(def-struct local 0
		(ptr this))

	;save inputs
	(vp-alloc local_size)
	(assign '(:r0 :r2 :r3 :r4 :r5 :r6 :r7)
		'((:rsp local_this) (:r0 error_description) (:r0 error_msg i)
		(:r0 error_object) (:r0 error_file) (:r0 error_line i) (:r0 error_frame)))

	;init parent
	(s-call 'error :init '(:r0 :r1) '(:r0 :r1))
	(vpif '(:r1 /= 0))
		;init self
		(call 'str :create_from_cstr '((:r0 error_description)) '(:r0))
		(assign '((:rsp local_this)) '(:r1))
		(assign '(:r0) '((:r1 error_description)))
		(call 'obj :ref '((:r1 error_file)) '(:r0))
		(assign '((:rsp local_this)) '(:r1))
		(assign '(:r0) '((:r1 error_file)))
		(call 'obj :ref '((:r1 error_object)))
		(assign '((:rsp local_this)) '(:r0))
	(endif)

	(vp-free local_size)
	(vp-ret)

(def-func-end)

(def-method 'error :deinit)
	;inputs
	;:r0 = error object (ptr)
	;outputs
	;:r0 = error object (ptr)
	;trashes
	;:r1-:r14

	(vp-push :r0)
	(call 'obj :deref '((:r0 error_description)))
	(assign '((:rsp 0)) '(:r0))
	(call 'obj :deref '((:r0 error_file)))
	(assign '((:rsp 0)) '(:r0))
	(call 'obj :deref '((:r0 error_object)))
	(assign '((:rsp 0)) '(:r0))
	(call 'obj :deref '((:r0 error_frame)))
	(vp-pop :r0)
	(s-jump 'error :deinit '(:r0))

(def-func-end)

(def-method 'error :get_msg)
	;inputs
	;:r0 = error object (ptr)
	;outputs
	;:r0 = error object (ptr)
	;:r1 = error c string (pubyte)
	;trashes
	;:r1-:r5

	(entry 'error :get_msg '(:r0))

	(assign '(:r0 "" (:r0 error_msg) ($ msgs)) '(:r3 :r4 :r5 :r0))
	(loop-while '(:r5 /= 0))
		(vp-cpy-ir-ub :r0 0 :r1)
		(breakif '(:r1 = 0))
		(vp-cpy-rr :r0 :r4)
		(call 'sys_str :length '(:r0) '(:r0 :r1))
		(vp-add-rr :r1 :r0)
		(vp-sub-cr 1 :r5)
		(vp-add-cr 1 :r0)
	(loop-end)

	(exit 'error :get_msg '(:r3 :r4))
	(vp-ret)

(vp-label 'msgs)
(errorcase
	(each (lambda (_) (vp-cstr _)) *error_msgs*))
(vp-label 'unknown)
	(vp-cstr "unknown_error !")
	(vp-byte 0)

(def-func-end)

(def-method 'error :print)
	;inputs
	;:r0 = error object (ptr)
	;:r1 = stream object (ptr)
	;outputs
	;:r0 = error object (ptr)
	;trashes
	;:r1-:r14

	(def-struct local 0
		(ptr this stream string))

	(vp-alloc local_size)
	(entry 'error :print '(:r0 :r1))
	(assign '(:r0 :r1) '((:rsp local_this) (:rsp local_stream)))

	(call 'stream :write_cstr '(:r1 "Error: "))
	(call 'error :get_description '((:rsp local_this)) '(_ :r1))
	(assign '((:r1 str_length)) '(:r2))
	(call 'stream :write '((:rsp local_stream) (& :r1 str_data) :r2) '(:r0))
	(call 'stream :write_char '(:r0 +char_space))
	(call 'error :get_msg '((:rsp local_this)) '(_ :r1))
	(call 'stream :write_cstr '((:rsp local_stream) :r1) '(:r0))

	(call 'stream :write_cstr '(:r0 " Repl: "))
	(call 'error :get_file '((:rsp local_this)) '(_ :r1))
	(assign '((:r1 str_length)) '(:r2))
	(call 'stream :write '((:rsp local_stream) (& :r1 str_data) :r2) '(:r0))
	(call 'stream :write_char '(:r0 +char_lrb))
	(call 'error :get_line '((:rsp local_this)) '(_ :r1))
	(call 'str :create_from_long '(:r1 10) '(:r0))
	(assign '(:r0) '((:rsp local_string)))
	(call 'stream :write '((:rsp local_stream) (& :r0 str_data) (:r0 str_length)))
	(call 'str :destroy '((:rsp local_string)))
	(call 'stream :write_char '((:rsp local_stream) +char_rrb) '(:r0))

	(call 'stream :write_cstr '(:r0 " Frame: "))
	(call 'error :get_frame '((:rsp local_this)) '(_ :r1))
	(call 'obj :print '(:r1 (:rsp local_stream)))

	(call 'str :create_from_buffer '(0 str_gap) '(:r0))
	(call 'sstream :create '(:r0) '((:rsp local_string)))
	(call 'error :get_object '((:rsp local_this)) '(_ :r1))
	(call 'obj :print '(:r1 (:rsp local_string)))
	(call 'sstream :ref_string '((:rsp local_string)) '(:r0 (:rsp local_string)))
	(call 'obj :destroy '(:r0))
	(assign '((:rsp local_string)) '(:r0))
	(assign '((:r0 str_length) 256) '(:r1 :r2))
	(vpif '(:r1 > :r2))
		(assign '((& :r0 str_data) 0) '(:r1 :r3))
		(assign '(:r2 :r3) '((:r0 str_length) (:r1 :r2 ub)))
	(endif)
	(call 'stream :write_cstr '((:rsp local_stream) " Obj: ") '(:r0))
	(assign '((:rsp local_string)) '(:r1))
	(call 'stream :write '((:rsp local_stream) (& :r1 str_data) (:r1 str_length)))
	(call 'str :destroy '((:rsp local_string)))

	(exit 'error :print '((:rsp local_this)))
	(vp-free local_size)
	(vp-ret)

(def-func-end)
