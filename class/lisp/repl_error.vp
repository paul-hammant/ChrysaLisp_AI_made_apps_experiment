(include "lib/asm/func.inc")
(include "././hmap/class.inc")
(include "./class.inc")

(def-method 'lisp :repl_error)
	;inputs
	;:r0 = lisp object (ptr)
	;:r1 = description c string (pubyte)
	;:r2 = 0, else error msg number (uint)
	;:r3 = error payload object (ptr)
	;outputs
	;:r0 = lisp object (ptr)
	;:r1 = error object (ptr)
	;trashes
	;:r1-:r14

	(def-vars
		(ptr this desc payload)
		(pptr frame)
		(uint msg))

	(push-scope)
	(entry 'lisp :repl_error {this, desc, msg, payload})

	(call 'hmap :search {this->lisp_environment, this->lisp_sym_stack_frame} {_, frame, _})
	(vpif {frame})
		(assign {frame[+ptr_size]} {frame})
		(call 'obj :ref {frame})
	(else)
		(call 'list :create :nil {frame})
	(endif)

	(call 'error :create {desc, msg, payload, this->lisp_stream_name, this->lisp_stream_line, frame} {frame})

	(exit 'lisp :repl_error {this, frame})
	(pop-scope)
	(return)

(def-func-end)
