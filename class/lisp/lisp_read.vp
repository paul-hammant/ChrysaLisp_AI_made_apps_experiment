(include "lib/asm/func.inc")
(include "././num/class.inc")
(include "././stream/class.inc")
(include "./class.inc")

(def-method 'lisp :lisp_read)
	;inputs
	;:r0 = lisp object (ptr)
	;:r1 = args list object (ptr)
	;outputs
	;:r0 = lisp object (ptr)
	;:r1 = return value object (ptr)
	;trashes
	;:r1-:r14

	(vp-def (form value this args stream) '(:r12 :r13))

	(entry 'lisp :lisp_read `(,this ,args))

	(errorif-lisp-args-sig 'error1 :r1 1 2)

	(assign `((,args array_length)) `(,value))
	(vpif `(,value = 1))
		(list-bind-args args `(,stream) '(:stream))
		(assign `(,(ascii-code " ")) `(,value))
	(else)
		(list-bind-args args `(,stream ,value) '(:stream :num))
	(endif)
	(call 'lisp :read `(,this ,stream ,value) `(,this ,form ,value))
	(vp-push this)
	(call 'num :create `(,value) `(,value))
	(call 'list :create :nil '(tmp))
	(call 'list :push_back2 `(,tmp ,form ,value) `(,args _ _ _ _))
	(vp-pop this)

	(exit 'lisp :lisp_read `(,this ,args))
	(vp-ret)

(errorcase
(vp-label 'error1)
	(jump 'lisp :repl_error `(,this "(read stream [last_char])" +error_msg_wrong_types ,args))
	(signature '(stream num)))

(def-func-end)
