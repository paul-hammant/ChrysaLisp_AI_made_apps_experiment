(include "lib/asm/func.inc")
(include "./class.inc")
(include "././str/class.inc")
(include "././lisp/class.inc")

(def-method 'out :lisp_create)
	;inputs
	;:r0 = lisp object (ptr)
	;:r1 = args list object (ptr)
	;outputs
	;:r0 = lisp object (ptr)
	;:r1 = return value object (ptr)
	;trashes
	;:r1-:r14

	(entry 'out :lisp_create '(:r0 :r1))

	(errorif-lisp-args-sig 'error :r1 1)

	(vp-push :r0)
	(defq in (method-input 'out :create))
	(list-bind-args :r1 `(,(third in)) '(:obj))
	(vp-cpy-ir (third in) (+ str_data net_id_mbox_id) (first in))
	(vp-cpy-ir (third in) (+ str_data net_id_node_id node_id_node1) (second in))
	(vp-cpy-ir (third in) (+ str_data net_id_node_id node_id_node2) (third in))
	(call 'out :create in '(:r1))
	(vp-pop :r0)

	(exit 'out :lisp_create '(:r0 :r1))
	(vp-ret)

(errorcase
(vp-label 'error)
	(jump 'lisp :repl_error '(:r0 "(out-stream mbox)" +error_msg_wrong_types :r1))
	(signature '(str)))

(def-func-end)
