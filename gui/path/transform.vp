(include "lib/asm/func.inc")
(include "./class.inc")

(def-method 'path :transform)
	;inputs
	;:r0 = path object (ptr)
	;:r1 = source path object, can be same (ptr)
	;:r2 = m3x2 fixeds object (ptr)
	;outputs
	;:r0 = path object (ptr)
	;trashes
	;:r1-:r13

	(vp-def (this iter_begin m00 m01 m02 m10 m11 m12
		iter_this iter_end x y x1 y1))

	(entry 'path :transform `(,this ,iter_begin ,m00))

	(class/array/get_both iter_begin iter_begin iter_end)
	(vpif `(,iter_begin /= ,iter_end))
		(assign `((,this array_begin)) `(,iter_this))
		(array-bind-args m00 `(,m00 ,m01 ,m02 ,m10 ,m11 ,m12))
		(loop-start)
			(vp-simd vp-cpy-ir `(,iter_begin) `(0 ,+long_size) `(,x ,y))
			(vp-simd vp-cpy-rr `(,x ,y) `(,x1 ,y1))
			(vp-simd vp-mul-rr `(,m00 ,m01 ,m10 ,m11) `(,x ,y1 ,x1 ,y))
			(vp-simd vp-add-rr `(,y1 ,x1) `(,x ,y))
			(vp-simd vp-asr-cr `(,+fp_shift) `(,x ,y))
			(vp-simd vp-add-rr `(,m02 ,m12) `(,x ,y))
			(vp-simd vp-cpy-ri `(,x ,y) `(,iter_this) `(0 ,+long_size))
			(vp-simd vp-add-cr `(,(* +long_size 2)) `(,iter_begin ,iter_this))
		(loop-until `(,iter_begin = ,iter_end))
	(endif)

	(exit 'path :transform `(,this))
	(vp-ret)

(def-func-end)
